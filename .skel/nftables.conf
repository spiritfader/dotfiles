#!/usr/bin/nft -f
# vim:set ts=2 sw=2 et:

table inet ruletable
delete table inet ruletable
table inet ruletable {
	chain home_tcp {
		#tcp dport 22 accept comment "accept SSH connections"
		#tcp dport 22 ct state new limit rate 15/minute accept comment "Accept SSH and SSH and prevent bruteforce"
		#tcp dport 80 accept comment "accept HTTP web server"
		#tcp dport 443 accept comment "accept HTTPS web server"
		#tcp dport 32400 accept comment "accept Plex Media Server"
		#tcp dport 32469 accept comment "accept Plex Media DLNA Server"
	}

	chain home_udp {
		udp dport 546 accept comment "accept reply from DHCPV6 client"
		#udp dport 1900 accept comment "accept UPNP"
		udp dport 5353 ip6 daddr ff02::fb accept comment "accept MDNS for IPv6"
		udp dport 5353 ip daddr 224.0.0.251 accept comment "accept MDNS for IPv4"
		#udp dport {32410,32412,32413,32414} accept comment "accept GDM network discovery (Plex Media Server)"
	}

	chain insecure_tcp {
	}

	chain insecure_udp {
		#udp dport 546 accept comment "accept reply from DHCPV6 client"
	}

	chain inbound {
		type filter hook input priority filter; policy drop;
		
		ct state established,related accept comment "accept traffic originating from this device"
		
		iif lo accept comment "accept any loopback traffic"
		iif != lo ip daddr 127.0.0.1/8 counter drop comment "drop connections to loopback not coming from loopback"
		iif != lo ip6 daddr ::1/128 counter drop comment "drop connections to loopback not coming from loopback"

		ct state invalid drop comment "drop invalid connections"
		
      	#icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept comment "Accept Ipv6 NDP traffic"
		
		meta l4proto icmp accept comment "accept IPv4 ICMP echo request (ping)"
		meta l4proto icmp icmp type echo-request limit rate over 10/second burst 4 packets drop comment "prevent ping floods"

		meta l4proto ipv6-icmp accept comment "accept IPv6 ICMP echo request (ping)"
		meta l4proto ipv6-icmp icmpv6 type echo-request limit rate over 10/second burst 4 packets drop comment "prevent ping floods"

		ip protocol igmp accept comment "accept IGMP connections"
		
		# New UDP traffic jumps to UDP chain
		meta l4proto udp ct state new jump home_udp
		
		# New TCP traffic jumps to TCP chain
		meta l4proto tcp tcp flags & (fin|syn|rst|ack) == syn ct state new jump home_tcp
		
		# Reject all traffic not processed by other rules
		meta l4proto udp reject comment "reject all udp traffic not processed by other rules"
		meta l4proto tcp reject with tcp reset comment "reject all tcp traffic not processed by other rules"
		
		# Log and output all dropped packets to journal
		counter log prefix "Packet dropped: " flags all	
	}

	chain forward {
		type filter hook forward priority filter; policy drop;
		# Drop everything forwarded to us. We do not forward. That is the routers job.
	}

	chain outbound {
		type filter hook output priority filter; policy accept; comment "accept every outbound connection"
	}
}
